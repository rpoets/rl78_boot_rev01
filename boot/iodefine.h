/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* www.renesas.com/disclaimer                                                 */
/*                                                                            */
/* Device     : RL78/R7F123FLG                                                */
/* File Name  : iodefine.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : V1.00  [Device File version]                                  */
/* Options    : -df=C:\Program Files (x86)\Renesas Electronics\CS+\CC\Device\ */
/*              RL78\Devicefile\DR7F123FLG.DVF -o=D:\RL78_F23_ws\boot_rev01\b */
/*              oot\iodefine.h -f                                             */
/* Date       : 2024-02-20 ?                                                  */
/* Version    : V1.18.00.03  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R7F123FLGIODEFINE_HEADER__
#define __R7F123FLGIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define PIOR0          (*(volatile __near unsigned char  *)0x16)
#define PIOR1          (*(volatile __near unsigned char  *)0x17)
#define PIOR4          (*(volatile __near unsigned char  *)0x1A)
#define PIOR5          (*(volatile __near unsigned char  *)0x1B)
#define PIOR7          (*(volatile __near unsigned char  *)0x1D)
#define PIOR9          (*(volatile __near unsigned char  *)0x1F)
#define PITHL1         (*(volatile __near unsigned char  *)0x21)
#define PITHL1_bit     (*(volatile __near __bitf_T *)0x21)
#define PITHL3         (*(volatile __near unsigned char  *)0x23)
#define PITHL3_bit     (*(volatile __near __bitf_T *)0x23)
#define PITHL4         (*(volatile __near unsigned char  *)0x24)
#define PITHL4_bit     (*(volatile __near __bitf_T *)0x24)
#define PITHL5         (*(volatile __near unsigned char  *)0x25)
#define PITHL5_bit     (*(volatile __near __bitf_T *)0x25)
#define PITHL6         (*(volatile __near unsigned char  *)0x26)
#define PITHL6_bit     (*(volatile __near __bitf_T *)0x26)
#define PITHL7         (*(volatile __near unsigned char  *)0x27)
#define PITHL7_bit     (*(volatile __near __bitf_T *)0x27)
#define PITHL12        (*(volatile __near unsigned char  *)0x2C)
#define PITHL12_bit    (*(volatile __near __bitf_T *)0x2C)
#define PU0            (*(volatile __near unsigned char  *)0x30)
#define PU0_bit        (*(volatile __near __bitf_T *)0x30)
#define PU1            (*(volatile __near unsigned char  *)0x31)
#define PU1_bit        (*(volatile __near __bitf_T *)0x31)
#define PU3            (*(volatile __near unsigned char  *)0x33)
#define PU3_bit        (*(volatile __near __bitf_T *)0x33)
#define PU4            (*(volatile __near unsigned char  *)0x34)
#define PU4_bit        (*(volatile __near __bitf_T *)0x34)
#define PU5            (*(volatile __near unsigned char  *)0x35)
#define PU5_bit        (*(volatile __near __bitf_T *)0x35)
#define PU6            (*(volatile __near unsigned char  *)0x36)
#define PU6_bit        (*(volatile __near __bitf_T *)0x36)
#define PU7            (*(volatile __near unsigned char  *)0x37)
#define PU7_bit        (*(volatile __near __bitf_T *)0x37)
#define PU12           (*(volatile __near unsigned char  *)0x3C)
#define PU12_bit       (*(volatile __near __bitf_T *)0x3C)
#define PU14           (*(volatile __near unsigned char  *)0x3E)
#define PU14_bit       (*(volatile __near __bitf_T *)0x3E)
#define PIM1           (*(volatile __near unsigned char  *)0x41)
#define PIM1_bit       (*(volatile __near __bitf_T *)0x41)
#define PIM3           (*(volatile __near unsigned char  *)0x43)
#define PIM3_bit       (*(volatile __near __bitf_T *)0x43)
#define PIM6           (*(volatile __near unsigned char  *)0x46)
#define PIM6_bit       (*(volatile __near __bitf_T *)0x46)
#define PIM7           (*(volatile __near unsigned char  *)0x47)
#define PIM7_bit       (*(volatile __near __bitf_T *)0x47)
#define PIM12          (*(volatile __near unsigned char  *)0x4C)
#define PIM12_bit      (*(volatile __near __bitf_T *)0x4C)
#define POM1           (*(volatile __near unsigned char  *)0x51)
#define POM1_bit       (*(volatile __near __bitf_T *)0x51)
#define POM3           (*(volatile __near unsigned char  *)0x53)
#define POM3_bit       (*(volatile __near __bitf_T *)0x53)
#define POM6           (*(volatile __near unsigned char  *)0x56)
#define POM6_bit       (*(volatile __near __bitf_T *)0x56)
#define POM7           (*(volatile __near unsigned char  *)0x57)
#define POM7_bit       (*(volatile __near __bitf_T *)0x57)
#define POM12          (*(volatile __near unsigned char  *)0x5C)
#define POM12_bit      (*(volatile __near __bitf_T *)0x5C)
#define PMC3           (*(volatile __near unsigned char  *)0x63)
#define PMC3_bit       (*(volatile __near __bitf_T *)0x63)
#define PMC7           (*(volatile __near unsigned char  *)0x67)
#define PMC7_bit       (*(volatile __near __bitf_T *)0x67)
#define PMC8           (*(volatile __near unsigned char  *)0x68)
#define PMC8_bit       (*(volatile __near __bitf_T *)0x68)
#define PMC9           (*(volatile __near unsigned char  *)0x69)
#define PMC9_bit       (*(volatile __near __bitf_T *)0x69)
#define PMC12          (*(volatile __near unsigned char  *)0x6C)
#define PMC12_bit      (*(volatile __near __bitf_T *)0x6C)
#define NFEN0          (*(volatile __near unsigned char  *)0x70)
#define NFEN0_bit      (*(volatile __near __bitf_T *)0x70)
#define NFEN1          (*(volatile __near unsigned char  *)0x71)
#define NFEN1_bit      (*(volatile __near __bitf_T *)0x71)
#define NFEN2          (*(volatile __near unsigned char  *)0x72)
#define NFEN2_bit      (*(volatile __near __bitf_T *)0x72)
#define ISC            (*(volatile __near unsigned char  *)0x73)
#define ISC_bit        (*(volatile __near __bitf_T *)0x73)
#define TIS0           (*(volatile __near unsigned char  *)0x74)
#define TIS1           (*(volatile __near unsigned char  *)0x75)
#define RAMSAR         (*(volatile __near unsigned char  *)0x76)
#define PMS            (*(volatile __near unsigned char  *)0x77)
#define PMS_bit        (*(volatile __near __bitf_T *)0x77)
#define IAWCTL         (*(volatile __near unsigned char  *)0x78)
#define INTFLG0        (*(volatile __near unsigned char  *)0x79)
#define LCHSEL         (*(volatile __near unsigned char  *)0x7B)
#define INTMSK         (*(volatile __near unsigned char  *)0x7C)
#define DFLCTL         (*(volatile __near unsigned char  *)0x90)
#define DFLCTL_bit     (*(volatile __near __bitf_T *)0x90)
#define DFLEN          (((volatile __near __bitf_T *)0x90)->no0)
#define HIOTRM         (*(volatile __near unsigned char  *)0xA0)
#define HOCODIV        (*(volatile __near unsigned char  *)0xA8)
#define CFERRCTLR      (*(volatile __near unsigned char  *)0xB8)
#define CFERRSTR       (*(volatile __near unsigned char  *)0xB9)
#define ERRADR1L       (*(volatile __near unsigned short *)0xBA)
#define ERRADR2L       (*(volatile __near unsigned short *)0xBA)
#define ERRADR3L       (*(volatile __near unsigned short *)0xBA)
#define ERRADRL        (*(volatile __near unsigned short *)0xBA)
#define ERRADR1H       (*(volatile __near unsigned short *)0xBC)
#define ERRADR2H       (*(volatile __near unsigned short *)0xBC)
#define ERRADR3H       (*(volatile __near unsigned short *)0xBC)
#define ERRADRH        (*(volatile __near unsigned short *)0xBC)
#define FLPMC          (*(volatile __near unsigned char  *)0xC0)
#define FLARS          (*(volatile __near unsigned char  *)0xC1)
#define FLARS_bit      (*(volatile __near __bitf_T *)0xC1)
#define FLAPL          (*(volatile __near unsigned short *)0xC2)
#define FLAPH          (*(volatile __near unsigned char  *)0xC4)
#define FSSQ           (*(volatile __near unsigned char  *)0xC5)
#define FSSQ_bit       (*(volatile __near __bitf_T *)0xC5)
#define FSSTP          (((volatile __near __bitf_T *)0xC5)->no6)
#define SQST           (((volatile __near __bitf_T *)0xC5)->no7)
#define FLSEDL         (*(volatile __near unsigned short *)0xC6)
#define FLSEDH         (*(volatile __near unsigned char  *)0xC8)
#define FLRST          (*(volatile __near unsigned char  *)0xC9)
#define FLRST_bit      (*(volatile __near __bitf_T *)0xC9)
#define FSASTL         (*(volatile __near unsigned char  *)0xCA)
#define FSASTL_bit     (*(volatile __near __bitf_T *)0xCA)
#define FSASTH         (*(volatile __near unsigned char  *)0xCB)
#define FSASTH_bit     (*(volatile __near __bitf_T *)0xCB)
#define SQEND          (((volatile __near __bitf_T *)0xCB)->no6)
#define ESQEND         (((volatile __near __bitf_T *)0xCB)->no7)
#define FLWL           (*(volatile __near unsigned short *)0xCC)
#define FLWH           (*(volatile __near unsigned short *)0xCE)
#define SPMCTRL        (*(volatile __near unsigned char  *)0xD8)
#define SPOFR          (*(volatile __near unsigned short *)0xDA)
#define SPUFR          (*(volatile __near unsigned short *)0xDC)
#define ADCKS          (*(volatile __near unsigned char  *)0xE0)
#define PER0           (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit       (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN         (((volatile __near __bitf_T *)0xF0)->no0)
#define TAU1EN         (((volatile __near __bitf_T *)0xF0)->no1)
#define SAU0EN         (((volatile __near __bitf_T *)0xF0)->no2)
#define SAU1EN         (((volatile __near __bitf_T *)0xF0)->no3)
#define IICA0EN        (((volatile __near __bitf_T *)0xF0)->no4)
#define ADCEN          (((volatile __near __bitf_T *)0xF0)->no5)
#define RTCEN          (((volatile __near __bitf_T *)0xF0)->no7)
#define OSMC           (*(volatile __near unsigned char  *)0xF3)
#define BCDADJ         (*(volatile __near unsigned char  *)0xFE)
#define SSR00          (*(volatile __near unsigned short *)0x100)
#define SSR00L         (*(volatile __near unsigned char  *)0x100)
#define SSR01          (*(volatile __near unsigned short *)0x102)
#define SSR01L         (*(volatile __near unsigned char  *)0x102)
#define SIR00          (*(volatile __near unsigned short *)0x104)
#define SIR00L         (*(volatile __near unsigned char  *)0x104)
#define SIR01          (*(volatile __near unsigned short *)0x106)
#define SIR01L         (*(volatile __near unsigned char  *)0x106)
#define SMR00          (*(volatile __near unsigned short *)0x108)
#define SMR01          (*(volatile __near unsigned short *)0x10A)
#define SCR00          (*(volatile __near unsigned short *)0x10C)
#define SCR01          (*(volatile __near unsigned short *)0x10E)
#define SE0            (*(volatile __near unsigned short *)0x110)
#define SE0L           (*(volatile __near unsigned char  *)0x110)
#define SE0L_bit       (*(volatile __near __bitf_T *)0x110)
#define SS0            (*(volatile __near unsigned short *)0x112)
#define SS0L           (*(volatile __near unsigned char  *)0x112)
#define SS0L_bit       (*(volatile __near __bitf_T *)0x112)
#define ST0            (*(volatile __near unsigned short *)0x114)
#define ST0L           (*(volatile __near unsigned char  *)0x114)
#define ST0L_bit       (*(volatile __near __bitf_T *)0x114)
#define SPS0           (*(volatile __near unsigned short *)0x116)
#define SPS0L          (*(volatile __near unsigned char  *)0x116)
#define SO0            (*(volatile __near unsigned short *)0x118)
#define SOE0           (*(volatile __near unsigned short *)0x11A)
#define SOE0L          (*(volatile __near unsigned char  *)0x11A)
#define SOE0L_bit      (*(volatile __near __bitf_T *)0x11A)
#define SOL0           (*(volatile __near unsigned short *)0x120)
#define SOL0L          (*(volatile __near unsigned char  *)0x120)
#define SSE0           (*(volatile __near unsigned short *)0x122)
#define SSE0L          (*(volatile __near unsigned char  *)0x122)
#define SSR10          (*(volatile __near unsigned short *)0x140)
#define SSR10L         (*(volatile __near unsigned char  *)0x140)
#define SSR11          (*(volatile __near unsigned short *)0x142)
#define SSR11L         (*(volatile __near unsigned char  *)0x142)
#define SIR10          (*(volatile __near unsigned short *)0x144)
#define SIR10L         (*(volatile __near unsigned char  *)0x144)
#define SIR11          (*(volatile __near unsigned short *)0x146)
#define SIR11L         (*(volatile __near unsigned char  *)0x146)
#define SMR10          (*(volatile __near unsigned short *)0x148)
#define SMR11          (*(volatile __near unsigned short *)0x14A)
#define SCR10          (*(volatile __near unsigned short *)0x14C)
#define SCR11          (*(volatile __near unsigned short *)0x14E)
#define SE1            (*(volatile __near unsigned short *)0x150)
#define SE1L           (*(volatile __near unsigned char  *)0x150)
#define SE1L_bit       (*(volatile __near __bitf_T *)0x150)
#define SS1            (*(volatile __near unsigned short *)0x152)
#define SS1L           (*(volatile __near unsigned char  *)0x152)
#define SS1L_bit       (*(volatile __near __bitf_T *)0x152)
#define ST1            (*(volatile __near unsigned short *)0x154)
#define ST1L           (*(volatile __near unsigned char  *)0x154)
#define ST1L_bit       (*(volatile __near __bitf_T *)0x154)
#define SPS1           (*(volatile __near unsigned short *)0x156)
#define SPS1L          (*(volatile __near unsigned char  *)0x156)
#define SO1            (*(volatile __near unsigned short *)0x158)
#define SOE1           (*(volatile __near unsigned short *)0x15A)
#define SOE1L          (*(volatile __near unsigned char  *)0x15A)
#define SOE1L_bit      (*(volatile __near __bitf_T *)0x15A)
#define SOL1           (*(volatile __near unsigned short *)0x160)
#define SOL1L          (*(volatile __near unsigned char  *)0x160)
#define SSE1           (*(volatile __near unsigned short *)0x162)
#define SSE1L          (*(volatile __near unsigned char  *)0x162)
#define TCR00          (*(volatile __near unsigned short *)0x180)
#define TCR01          (*(volatile __near unsigned short *)0x182)
#define TCR02          (*(volatile __near unsigned short *)0x184)
#define TCR03          (*(volatile __near unsigned short *)0x186)
#define TCR04          (*(volatile __near unsigned short *)0x188)
#define TCR05          (*(volatile __near unsigned short *)0x18A)
#define TCR06          (*(volatile __near unsigned short *)0x18C)
#define TCR07          (*(volatile __near unsigned short *)0x18E)
#define TMR00          (*(volatile __near unsigned short *)0x190)
#define TMR01          (*(volatile __near unsigned short *)0x192)
#define TMR02          (*(volatile __near unsigned short *)0x194)
#define TMR03          (*(volatile __near unsigned short *)0x196)
#define TMR04          (*(volatile __near unsigned short *)0x198)
#define TMR05          (*(volatile __near unsigned short *)0x19A)
#define TMR06          (*(volatile __near unsigned short *)0x19C)
#define TMR07          (*(volatile __near unsigned short *)0x19E)
#define TSR00          (*(volatile __near unsigned short *)0x1A0)
#define TSR00L         (*(volatile __near unsigned char  *)0x1A0)
#define TSR01          (*(volatile __near unsigned short *)0x1A2)
#define TSR01L         (*(volatile __near unsigned char  *)0x1A2)
#define TSR02          (*(volatile __near unsigned short *)0x1A4)
#define TSR02L         (*(volatile __near unsigned char  *)0x1A4)
#define TSR03          (*(volatile __near unsigned short *)0x1A6)
#define TSR03L         (*(volatile __near unsigned char  *)0x1A6)
#define TSR04          (*(volatile __near unsigned short *)0x1A8)
#define TSR04L         (*(volatile __near unsigned char  *)0x1A8)
#define TSR05          (*(volatile __near unsigned short *)0x1AA)
#define TSR05L         (*(volatile __near unsigned char  *)0x1AA)
#define TSR06          (*(volatile __near unsigned short *)0x1AC)
#define TSR06L         (*(volatile __near unsigned char  *)0x1AC)
#define TSR07          (*(volatile __near unsigned short *)0x1AE)
#define TSR07L         (*(volatile __near unsigned char  *)0x1AE)
#define TE0            (*(volatile __near unsigned short *)0x1B0)
#define TE0L           (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit       (*(volatile __near __bitf_T *)0x1B0)
#define TS0            (*(volatile __near unsigned short *)0x1B2)
#define TS0L           (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit       (*(volatile __near __bitf_T *)0x1B2)
#define TT0            (*(volatile __near unsigned short *)0x1B4)
#define TT0L           (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit       (*(volatile __near __bitf_T *)0x1B4)
#define TPS0           (*(volatile __near unsigned short *)0x1B6)
#define TO0            (*(volatile __near unsigned short *)0x1B8)
#define TO0L           (*(volatile __near unsigned char  *)0x1B8)
#define TOE0           (*(volatile __near unsigned short *)0x1BA)
#define TOE0L          (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit      (*(volatile __near __bitf_T *)0x1BA)
#define TOL0           (*(volatile __near unsigned short *)0x1BC)
#define TOL0L          (*(volatile __near unsigned char  *)0x1BC)
#define TOM0           (*(volatile __near unsigned short *)0x1BE)
#define TOM0L          (*(volatile __near unsigned char  *)0x1BE)
#define TCR10          (*(volatile __near unsigned short *)0x1C0)
#define TCR11          (*(volatile __near unsigned short *)0x1C2)
#define TCR12          (*(volatile __near unsigned short *)0x1C4)
#define TCR13          (*(volatile __near unsigned short *)0x1C6)
#define TMR10          (*(volatile __near unsigned short *)0x1D0)
#define TMR11          (*(volatile __near unsigned short *)0x1D2)
#define TMR12          (*(volatile __near unsigned short *)0x1D4)
#define TMR13          (*(volatile __near unsigned short *)0x1D6)
#define TSR10          (*(volatile __near unsigned short *)0x1E0)
#define TSR10L         (*(volatile __near unsigned char  *)0x1E0)
#define TSR11          (*(volatile __near unsigned short *)0x1E2)
#define TSR11L         (*(volatile __near unsigned char  *)0x1E2)
#define TSR12          (*(volatile __near unsigned short *)0x1E4)
#define TSR12L         (*(volatile __near unsigned char  *)0x1E4)
#define TSR13          (*(volatile __near unsigned short *)0x1E6)
#define TSR13L         (*(volatile __near unsigned char  *)0x1E6)
#define TE1            (*(volatile __near unsigned short *)0x1F0)
#define TE1L           (*(volatile __near unsigned char  *)0x1F0)
#define TE1L_bit       (*(volatile __near __bitf_T *)0x1F0)
#define TS1            (*(volatile __near unsigned short *)0x1F2)
#define TS1L           (*(volatile __near unsigned char  *)0x1F2)
#define TS1L_bit       (*(volatile __near __bitf_T *)0x1F2)
#define TT1            (*(volatile __near unsigned short *)0x1F4)
#define TT1L           (*(volatile __near unsigned char  *)0x1F4)
#define TT1L_bit       (*(volatile __near __bitf_T *)0x1F4)
#define TPS1           (*(volatile __near unsigned short *)0x1F6)
#define TO1            (*(volatile __near unsigned short *)0x1F8)
#define TO1L           (*(volatile __near unsigned char  *)0x1F8)
#define TOE1           (*(volatile __near unsigned short *)0x1FA)
#define TOE1L          (*(volatile __near unsigned char  *)0x1FA)
#define TOE1L_bit      (*(volatile __near __bitf_T *)0x1FA)
#define TOL1           (*(volatile __near unsigned short *)0x1FC)
#define TOL1L          (*(volatile __near unsigned char  *)0x1FC)
#define TOM1           (*(volatile __near unsigned short *)0x1FE)
#define TOM1L          (*(volatile __near unsigned char  *)0x1FE)
#define ERADR          (*(volatile __near unsigned short *)0x200)
#define ECCIER         (*(volatile __near unsigned char  *)0x202)
#define ECCER          (*(volatile __near unsigned char  *)0x203)
#define ECCTPR         (*(volatile __near unsigned char  *)0x204)
#define ECCTMDR        (*(volatile __near unsigned char  *)0x205)
#define ECCDWRVR       (*(volatile __near unsigned short *)0x206)
#define PSRSEL         (*(volatile __near unsigned char  *)0x220)
#define PSRSEL_bit     (*(volatile __near __bitf_T *)0x220)
#define PSNZCNT0       (*(volatile __near unsigned char  *)0x222)
#define PSNZCNT0_bit   (*(volatile __near __bitf_T *)0x222)
#define PSNZCNT1       (*(volatile __near unsigned char  *)0x223)
#define PSNZCNT1_bit   (*(volatile __near __bitf_T *)0x223)
#define PSNZCNT2       (*(volatile __near unsigned char  *)0x224)
#define PSNZCNT2_bit   (*(volatile __near __bitf_T *)0x224)
#define PSNZCNT3       (*(volatile __near unsigned char  *)0x225)
#define PSNZCNT3_bit   (*(volatile __near __bitf_T *)0x225)
#define PWMDLY0        (*(volatile __near unsigned short *)0x228)
#define PWMDLY1        (*(volatile __near unsigned short *)0x22A)
#define PWMDLY2        (*(volatile __near unsigned short *)0x22C)
#define IICCTL00       (*(volatile __near unsigned char  *)0x230)
#define IICCTL00_bit   (*(volatile __near __bitf_T *)0x230)
#define SPT0           (((volatile __near __bitf_T *)0x230)->no0)
#define STT0           (((volatile __near __bitf_T *)0x230)->no1)
#define ACKE0          (((volatile __near __bitf_T *)0x230)->no2)
#define WTIM0          (((volatile __near __bitf_T *)0x230)->no3)
#define SPIE0          (((volatile __near __bitf_T *)0x230)->no4)
#define WREL0          (((volatile __near __bitf_T *)0x230)->no5)
#define LREL0          (((volatile __near __bitf_T *)0x230)->no6)
#define IICE0          (((volatile __near __bitf_T *)0x230)->no7)
#define IICCTL01       (*(volatile __near unsigned char  *)0x231)
#define IICCTL01_bit   (*(volatile __near __bitf_T *)0x231)
#define PRS0           (((volatile __near __bitf_T *)0x231)->no0)
#define DFC0           (((volatile __near __bitf_T *)0x231)->no2)
#define SMC0           (((volatile __near __bitf_T *)0x231)->no3)
#define DAD0           (((volatile __near __bitf_T *)0x231)->no4)
#define CLD0           (((volatile __near __bitf_T *)0x231)->no5)
#define WUP0           (((volatile __near __bitf_T *)0x231)->no7)
#define IICWL0         (*(volatile __near unsigned char  *)0x232)
#define IICWH0         (*(volatile __near unsigned char  *)0x233)
#define SVA0           (*(volatile __near unsigned char  *)0x234)
#define TRJCR0         (*(volatile __near unsigned char  *)0x240)
#define TRJIOC0        (*(volatile __near unsigned char  *)0x241)
#define TRJIOC0_bit    (*(volatile __near __bitf_T *)0x241)
#define TRJMR0         (*(volatile __near unsigned char  *)0x242)
#define TRJMR0_bit     (*(volatile __near __bitf_T *)0x242)
#define TRJISR0        (*(volatile __near unsigned char  *)0x243)
#define TRJISR0_bit    (*(volatile __near __bitf_T *)0x243)
#define OPCTL0         (*(volatile __near unsigned char  *)0x248)
#define OPCTL0_bit     (*(volatile __near __bitf_T *)0x248)
#define HZ_REL         (((volatile __near __bitf_T *)0x248)->no1)
#define OPDF0          (*(volatile __near unsigned char  *)0x249)
#define OPDF1          (*(volatile __near unsigned char  *)0x24A)
#define OPEDGE         (*(volatile __near unsigned char  *)0x24B)
#define OPSR           (*(volatile __near unsigned char  *)0x24C)
#define OPSR_bit       (*(volatile __near __bitf_T *)0x24C)
#define TRDMBKCTL      (*(volatile __near unsigned char  *)0x24E)
#define TRDMBKCMP      (*(volatile __near unsigned char  *)0x24F)
#define TRDSTR         (*(volatile __near unsigned char  *)0x253)
#define TRDMR          (*(volatile __near unsigned char  *)0x254)
#define TRDMR_bit      (*(volatile __near __bitf_T *)0x254)
#define TRDSYNC        (((volatile __near __bitf_T *)0x254)->no0)
#define TRDBFC0        (((volatile __near __bitf_T *)0x254)->no4)
#define TRDBFD0        (((volatile __near __bitf_T *)0x254)->no5)
#define TRDBFC1        (((volatile __near __bitf_T *)0x254)->no6)
#define TRDBFD1        (((volatile __near __bitf_T *)0x254)->no7)
#define TRDPMR         (*(volatile __near unsigned char  *)0x255)
#define TRDPMR_bit     (*(volatile __near __bitf_T *)0x255)
#define TRDPWMB0       (((volatile __near __bitf_T *)0x255)->no0)
#define TRDPWMC0       (((volatile __near __bitf_T *)0x255)->no1)
#define TRDPWMD0       (((volatile __near __bitf_T *)0x255)->no2)
#define TRDPWMB1       (((volatile __near __bitf_T *)0x255)->no4)
#define TRDPWMC1       (((volatile __near __bitf_T *)0x255)->no5)
#define TRDPWMD1       (((volatile __near __bitf_T *)0x255)->no6)
#define TRDFCR         (*(volatile __near unsigned char  *)0x256)
#define TRDFCR_bit     (*(volatile __near __bitf_T *)0x256)
#define TRDOER1        (*(volatile __near unsigned char  *)0x257)
#define TRDOER1_bit    (*(volatile __near __bitf_T *)0x257)
#define TRDOER2        (*(volatile __near unsigned char  *)0x258)
#define TRDOER2_bit    (*(volatile __near __bitf_T *)0x258)
#define TRDSHUTS       (((volatile __near __bitf_T *)0x258)->no0)
#define TRDPTO         (((volatile __near __bitf_T *)0x258)->no7)
#define TRDOCR         (*(volatile __near unsigned char  *)0x259)
#define TRDOCR_bit     (*(volatile __near __bitf_T *)0x259)
#define TRDDF0         (*(volatile __near unsigned char  *)0x25A)
#define TRDDF0_bit     (*(volatile __near __bitf_T *)0x25A)
#define TRDDF1         (*(volatile __near unsigned char  *)0x25B)
#define TRDDF1_bit     (*(volatile __near __bitf_T *)0x25B)
#define TRDCR0         (*(volatile __near unsigned char  *)0x260)
#define TRDCR0_bit     (*(volatile __near __bitf_T *)0x260)
#define TRDIORA0       (*(volatile __near unsigned char  *)0x261)
#define TRDIORA0_bit   (*(volatile __near __bitf_T *)0x261)
#define TRDIORC0       (*(volatile __near unsigned char  *)0x262)
#define TRDIORC0_bit   (*(volatile __near __bitf_T *)0x262)
#define TRDSR0         (*(volatile __near unsigned char  *)0x263)
#define TRDSR0_bit     (*(volatile __near __bitf_T *)0x263)
#define TRDIER0        (*(volatile __near unsigned char  *)0x264)
#define TRDIER0_bit    (*(volatile __near __bitf_T *)0x264)
#define TRDPOCR0       (*(volatile __near unsigned char  *)0x265)
#define TRDPOCR0_bit   (*(volatile __near __bitf_T *)0x265)
#define TRD0           (*(volatile __near unsigned short *)0x266)
#define TRDGRA0        (*(volatile __near unsigned short *)0x268)
#define TRDGRB0        (*(volatile __near unsigned short *)0x26A)
#define TRDCR1         (*(volatile __near unsigned char  *)0x270)
#define TRDCR1_bit     (*(volatile __near __bitf_T *)0x270)
#define TRDIORA1       (*(volatile __near unsigned char  *)0x271)
#define TRDIORA1_bit   (*(volatile __near __bitf_T *)0x271)
#define TRDIORC1       (*(volatile __near unsigned char  *)0x272)
#define TRDIORC1_bit   (*(volatile __near __bitf_T *)0x272)
#define TRDSR1         (*(volatile __near unsigned char  *)0x273)
#define TRDSR1_bit     (*(volatile __near __bitf_T *)0x273)
#define TRDIER1        (*(volatile __near unsigned char  *)0x274)
#define TRDIER1_bit    (*(volatile __near __bitf_T *)0x274)
#define TRDPOCR1       (*(volatile __near unsigned char  *)0x275)
#define TRDPOCR1_bit   (*(volatile __near __bitf_T *)0x275)
#define TRD1           (*(volatile __near unsigned short *)0x276)
#define TRDGRA1        (*(volatile __near unsigned short *)0x278)
#define TRDGRB1        (*(volatile __near unsigned short *)0x27A)
#define TRDCMPB0       (*(volatile __near unsigned short *)0x280)
#define TRDCMPA1       (*(volatile __near unsigned short *)0x284)
#define TRDCMPB1       (*(volatile __near unsigned short *)0x288)
#define TRDADTC0       (*(volatile __near unsigned short *)0x28C)
#define TRDADTC1       (*(volatile __near unsigned short *)0x290)
#define TRDRSF01       (*(volatile __near unsigned short *)0x296)
#define TRDRSF0        (*(volatile __near unsigned char  *)0x296)
#define TRDRSF0_bit    (*(volatile __near __bitf_T *)0x296)
#define TRDRSF1        (*(volatile __near unsigned char  *)0x297)
#define TRDRSF1_bit    (*(volatile __near __bitf_T *)0x297)
#define TRDADCR        (*(volatile __near unsigned char  *)0x298)
#define TRDADCR_bit    (*(volatile __near __bitf_T *)0x298)
#define TRDEMR0        (*(volatile __near unsigned char  *)0x29A)
#define TRDEMR0_bit    (*(volatile __near __bitf_T *)0x29A)
#define TRDEMR1        (*(volatile __near unsigned char  *)0x29B)
#define TRDEMR1_bit    (*(volatile __near __bitf_T *)0x29B)
#define ADTREG0        (*(volatile __near unsigned short *)0x2B0)
#define ADUTYL1        (*(volatile __near unsigned short *)0x2B0)
#define AIDBFL         (*(volatile __near unsigned short *)0x2B0)
#define AKPD           (*(volatile __near unsigned short *)0x2B0)
#define AL3REF         (*(volatile __near unsigned short *)0x2B0)
#define ADTREG1        (*(volatile __near unsigned short *)0x2B2)
#define ADUTYL2        (*(volatile __near unsigned short *)0x2B2)
#define AIDBFH         (*(volatile __near unsigned short *)0x2B2)
#define AKID           (*(volatile __near unsigned short *)0x2B2)
#define AL1OFS         (*(volatile __near unsigned short *)0x2B2)
#define ADTREG2        (*(volatile __near unsigned short *)0x2B4)
#define ADUTYL3        (*(volatile __near unsigned short *)0x2B4)
#define AIQBFL         (*(volatile __near unsigned short *)0x2B4)
#define AKPQ           (*(volatile __near unsigned short *)0x2B4)
#define AL2OFS         (*(volatile __near unsigned short *)0x2B4)
#define ADTREG3        (*(volatile __near unsigned short *)0x2B6)
#define AIPL1          (*(volatile __near unsigned short *)0x2B6)
#define AIQBFH         (*(volatile __near unsigned short *)0x2B6)
#define AKIQ           (*(volatile __near unsigned short *)0x2B6)
#define AL3OFS         (*(volatile __near unsigned short *)0x2B6)
#define ADOVER         (*(volatile __near unsigned short *)0x2B8)
#define AIPL2          (*(volatile __near unsigned short *)0x2B8)
#define AIPL3          (*(volatile __near unsigned short *)0x2BA)
#define AQOVER         (*(volatile __near unsigned short *)0x2BA)
#define ACTLREG        (*(volatile __near unsigned char  *)0x2BA)
#define ACTLREG_bit    (*(volatile __near __bitf_T *)0x2BA)
#define ADUTYMX        (*(volatile __near unsigned char  *)0x2BB)
#define AKRAG          (*(volatile __near unsigned char  *)0x2BB)
#define OST            (((volatile __near __bitf_T *)0x2BA)->no0)
#define STM            (((volatile __near __bitf_T *)0x2BA)->no1)
#define AIDREF         (*(volatile __near unsigned short *)0x2BC)
#define AILIM          (*(volatile __near unsigned short *)0x2BC)
#define AKI1           (*(volatile __near unsigned short *)0x2BC)
#define AL1REF         (*(volatile __near unsigned short *)0x2BC)
#define AIQREF         (*(volatile __near unsigned short *)0x2BE)
#define AKI2           (*(volatile __near unsigned short *)0x2BE)
#define AL2REF         (*(volatile __near unsigned short *)0x2BE)
#define APILIM         (*(volatile __near unsigned short *)0x2BE)
#define PER1           (*(volatile __near unsigned char  *)0x2C0)
#define PER1_bit       (*(volatile __near __bitf_T *)0x2C0)
#define TRJ0EN         (((volatile __near __bitf_T *)0x2C0)->no0)
#define PWMOPEN        (((volatile __near __bitf_T *)0x2C0)->no2)
#define DTCEN          (((volatile __near __bitf_T *)0x2C0)->no3)
#define TRD0EN         (((volatile __near __bitf_T *)0x2C0)->no4)
#define PER2           (*(volatile __near unsigned char  *)0x2C1)
#define PER2_bit       (*(volatile __near __bitf_T *)0x2C1)
#define LIN0EN         (((volatile __near __bitf_T *)0x2C1)->no2)
#define AAUEN          (((volatile __near __bitf_T *)0x2C1)->no6)
#define LINCKSEL       (*(volatile __near unsigned char  *)0x2C3)
#define LINCKSEL_bit   (*(volatile __near __bitf_T *)0x2C3)
#define LIN0MCK        (((volatile __near __bitf_T *)0x2C3)->no0)
#define LIN0MCKE       (((volatile __near __bitf_T *)0x2C3)->no4)
#define CKSEL          (*(volatile __near unsigned char  *)0x2C4)
#define CKSEL_bit      (*(volatile __near __bitf_T *)0x2C4)
#define SELLOSC        (((volatile __near __bitf_T *)0x2C4)->no0)
#define TRD_CKSEL      (((volatile __near __bitf_T *)0x2C4)->no2)
#define FMAINDIV0      (((volatile __near __bitf_T *)0x2C4)->no5)
#define FMAINDIV1      (((volatile __near __bitf_T *)0x2C4)->no6)
#define FPLLDIV        (((volatile __near __bitf_T *)0x2C4)->no7)
#define PLLCTL         (*(volatile __near unsigned char  *)0x2C5)
#define PLLCTL_bit     (*(volatile __near __bitf_T *)0x2C5)
#define PLLON          (((volatile __near __bitf_T *)0x2C5)->no0)
#define PLLMUL         (((volatile __near __bitf_T *)0x2C5)->no1)
#define SELPLL         (((volatile __near __bitf_T *)0x2C5)->no2)
#define PLLMULA        (((volatile __near __bitf_T *)0x2C5)->no3)
#define PLLDIV0        (((volatile __near __bitf_T *)0x2C5)->no4)
#define PLLDIV1        (((volatile __near __bitf_T *)0x2C5)->no5)
#define LCKSEL0        (((volatile __near __bitf_T *)0x2C5)->no6)
#define LCKSEL1        (((volatile __near __bitf_T *)0x2C5)->no7)
#define PLLSTS         (*(volatile __near unsigned char  *)0x2C6)
#define PLLSTS_bit     (*(volatile __near __bitf_T *)0x2C6)
#define SELPLLS        (((volatile __near __bitf_T *)0x2C6)->no3)
#define LOCK           (((volatile __near __bitf_T *)0x2C6)->no7)
#define MDIV           (*(volatile __near unsigned char  *)0x2C7)
#define RTCCL          (*(volatile __near unsigned char  *)0x2C8)
#define RTCCL_bit      (*(volatile __near __bitf_T *)0x2C8)
#define POCRES         (*(volatile __near unsigned char  *)0x2C9)
#define POCRES_bit     (*(volatile __near __bitf_T *)0x2C9)
#define POCRES0        (((volatile __near __bitf_T *)0x2C9)->no0)
#define CLKRF          (((volatile __near __bitf_T *)0x2C9)->no4)
#define STPSTC         (*(volatile __near unsigned char  *)0x2CA)
#define STPSTC_bit     (*(volatile __near __bitf_T *)0x2CA)
#define STPSEL         (((volatile __near __bitf_T *)0x2CA)->no0)
#define STPLV          (((volatile __near __bitf_T *)0x2CA)->no4)
#define STPOEN         (((volatile __near __bitf_T *)0x2CA)->no7)
#define CLMTES         (*(volatile __near unsigned char  *)0x2CC)
#define CLMTES_bit     (*(volatile __near __bitf_T *)0x2CC)
#define CK1MSK         (((volatile __near __bitf_T *)0x2CC)->no0)
#define CK2MSK         (((volatile __near __bitf_T *)0x2CC)->no1)
#define CLMTEN         (((volatile __near __bitf_T *)0x2CC)->no3)
#define TESEN          (((volatile __near __bitf_T *)0x2CC)->no7)
#define HDTCCR0        (*(volatile __near unsigned char  *)0x2D0)
#define HDTCCR0_bit    (*(volatile __near __bitf_T *)0x2D0)
#define HMODE0         (((volatile __near __bitf_T *)0x2D0)->no0)
#define HRPTSEL0       (((volatile __near __bitf_T *)0x2D0)->no1)
#define HSAMOD0        (((volatile __near __bitf_T *)0x2D0)->no2)
#define HDAMOD0        (((volatile __near __bitf_T *)0x2D0)->no3)
#define HCHNE0         (((volatile __near __bitf_T *)0x2D0)->no4)
#define HRPTINT0       (((volatile __near __bitf_T *)0x2D0)->no5)
#define HSZ0           (((volatile __near __bitf_T *)0x2D0)->no6)
#define HDTCCT0        (*(volatile __near unsigned char  *)0x2D2)
#define HDTCCT0_bit    (*(volatile __near __bitf_T *)0x2D2)
#define HDTRLD0        (*(volatile __near unsigned char  *)0x2D3)
#define HDTRLD0_bit    (*(volatile __near __bitf_T *)0x2D3)
#define HDTSAR0        (*(volatile __near unsigned short *)0x2D4)
#define HDTDAR0        (*(volatile __near unsigned short *)0x2D6)
#define HDTCCR1        (*(volatile __near unsigned char  *)0x2D8)
#define HDTCCR1_bit    (*(volatile __near __bitf_T *)0x2D8)
#define HMODE1         (((volatile __near __bitf_T *)0x2D8)->no0)
#define HRPTSEL1       (((volatile __near __bitf_T *)0x2D8)->no1)
#define HSAMOD1        (((volatile __near __bitf_T *)0x2D8)->no2)
#define HDAMOD1        (((volatile __near __bitf_T *)0x2D8)->no3)
#define HCHNE1         (((volatile __near __bitf_T *)0x2D8)->no4)
#define HRPTINT1       (((volatile __near __bitf_T *)0x2D8)->no5)
#define HSZ1           (((volatile __near __bitf_T *)0x2D8)->no6)
#define HDTCCT1        (*(volatile __near unsigned char  *)0x2DA)
#define HDTCCT1_bit    (*(volatile __near __bitf_T *)0x2DA)
#define HDTRLD1        (*(volatile __near unsigned char  *)0x2DB)
#define HDTRLD1_bit    (*(volatile __near __bitf_T *)0x2DB)
#define HDTSAR1        (*(volatile __near unsigned short *)0x2DC)
#define HDTDAR1        (*(volatile __near unsigned short *)0x2DE)
#define DTCBAR         (*(volatile __near unsigned char  *)0x2E0)
#define SELHS0         (*(volatile __near unsigned char  *)0x2E1)
#define SELHS0_bit     (*(volatile __near __bitf_T *)0x2E1)
#define SELHS1         (*(volatile __near unsigned char  *)0x2E2)
#define SELHS1_bit     (*(volatile __near __bitf_T *)0x2E2)
#define DTCEN0         (*(volatile __near unsigned char  *)0x2E8)
#define DTCEN0_bit     (*(volatile __near __bitf_T *)0x2E8)
#define DTCEN00        (((volatile __near __bitf_T *)0x2E8)->no0)
#define DTCEN01        (((volatile __near __bitf_T *)0x2E8)->no1)
#define DTCEN02        (((volatile __near __bitf_T *)0x2E8)->no2)
#define DTCEN03        (((volatile __near __bitf_T *)0x2E8)->no3)
#define DTCEN04        (((volatile __near __bitf_T *)0x2E8)->no4)
#define DTCEN05        (((volatile __near __bitf_T *)0x2E8)->no5)
#define DTCEN06        (((volatile __near __bitf_T *)0x2E8)->no6)
#define DTCEN1         (*(volatile __near unsigned char  *)0x2E9)
#define DTCEN1_bit     (*(volatile __near __bitf_T *)0x2E9)
#define DTCEN10        (((volatile __near __bitf_T *)0x2E9)->no0)
#define DTCEN11        (((volatile __near __bitf_T *)0x2E9)->no1)
#define DTCEN12        (((volatile __near __bitf_T *)0x2E9)->no2)
#define DTCEN13        (((volatile __near __bitf_T *)0x2E9)->no3)
#define DTCEN14        (((volatile __near __bitf_T *)0x2E9)->no4)
#define DTCEN15        (((volatile __near __bitf_T *)0x2E9)->no5)
#define DTCEN16        (((volatile __near __bitf_T *)0x2E9)->no6)
#define DTCEN17        (((volatile __near __bitf_T *)0x2E9)->no7)
#define DTCEN2         (*(volatile __near unsigned char  *)0x2EA)
#define DTCEN2_bit     (*(volatile __near __bitf_T *)0x2EA)
#define DTCEN20        (((volatile __near __bitf_T *)0x2EA)->no0)
#define DTCEN21        (((volatile __near __bitf_T *)0x2EA)->no1)
#define DTCEN22        (((volatile __near __bitf_T *)0x2EA)->no2)
#define DTCEN23        (((volatile __near __bitf_T *)0x2EA)->no3)
#define DTCEN24        (((volatile __near __bitf_T *)0x2EA)->no4)
#define DTCEN25        (((volatile __near __bitf_T *)0x2EA)->no5)
#define DTCEN3         (*(volatile __near unsigned char  *)0x2EB)
#define DTCEN3_bit     (*(volatile __near __bitf_T *)0x2EB)
#define DTCEN30        (((volatile __near __bitf_T *)0x2EB)->no0)
#define DTCEN31        (((volatile __near __bitf_T *)0x2EB)->no1)
#define DTCEN32        (((volatile __near __bitf_T *)0x2EB)->no2)
#define DTCEN33        (((volatile __near __bitf_T *)0x2EB)->no3)
#define DTCEN34        (((volatile __near __bitf_T *)0x2EB)->no4)
#define DTCEN35        (((volatile __near __bitf_T *)0x2EB)->no5)
#define DTCEN36        (((volatile __near __bitf_T *)0x2EB)->no6)
#define DTCEN37        (((volatile __near __bitf_T *)0x2EB)->no7)
#define DTCEN4         (*(volatile __near unsigned char  *)0x2EC)
#define DTCEN4_bit     (*(volatile __near __bitf_T *)0x2EC)
#define DTCEN40        (((volatile __near __bitf_T *)0x2EC)->no0)
#define DTCEN41        (((volatile __near __bitf_T *)0x2EC)->no1)
#define DTCEN42        (((volatile __near __bitf_T *)0x2EC)->no2)
#define DTCEN43        (((volatile __near __bitf_T *)0x2EC)->no3)
#define DTCEN45        (((volatile __near __bitf_T *)0x2EC)->no5)
#define DTCEN46        (((volatile __near __bitf_T *)0x2EC)->no6)
#define DTCEN47        (((volatile __near __bitf_T *)0x2EC)->no7)
#define CRC0CTL        (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit    (*(volatile __near __bitf_T *)0x2F0)
#define CRC0EN         (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL         (*(volatile __near unsigned short *)0x2F2)
#define CRCMD          (*(volatile __near unsigned char  *)0x2F9)
#define CRCD           (*(volatile __near unsigned short *)0x2FA)
#define ADDR0M         (*(volatile __near unsigned short *)0x6A0)
#define ADDR1M         (*(volatile __near unsigned short *)0x6A2)
#define ADDR2M         (*(volatile __near unsigned short *)0x6A4)
#define ADDR3M         (*(volatile __near unsigned short *)0x6A6)
#define ADDR4M         (*(volatile __near unsigned short *)0x6A8)
#define ADDR5M         (*(volatile __near unsigned short *)0x6AA)
#define ADDR6M         (*(volatile __near unsigned short *)0x6AC)
#define ADDR7M         (*(volatile __near unsigned short *)0x6AE)
#define ADCSR          (*(volatile __near unsigned short *)0x6B0)
#define ADDR0          (*(volatile __near unsigned short *)0x6B0)
#define ADDR16         (*(volatile __near unsigned short *)0x6B0)
#define ADDR24         (*(volatile __near unsigned short *)0x6B0)
#define ADDR8          (*(volatile __near unsigned short *)0x6B0)
#define ADGSPCR        (*(volatile __near unsigned short *)0x6B0)
#define ADSTRGR        (*(volatile __near unsigned short *)0x6B0)
#define ADSSTR0        (*(volatile __near unsigned char  *)0x6B0)
#define ADSSTR1        (*(volatile __near unsigned char  *)0x6B1)
#define ADDR1          (*(volatile __near unsigned short *)0x6B2)
#define ADDR25         (*(volatile __near unsigned short *)0x6B2)
#define ADDR9          (*(volatile __near unsigned short *)0x6B2)
#define ADEXICR        (*(volatile __near unsigned short *)0x6B2)
#define ADSSTR2        (*(volatile __near unsigned char  *)0x6B2)
#define ADSSTR3        (*(volatile __near unsigned char  *)0x6B3)
#define ADANSA0        (*(volatile __near unsigned short *)0x6B4)
#define ADANSB0        (*(volatile __near unsigned short *)0x6B4)
#define ADDR10         (*(volatile __near unsigned short *)0x6B4)
#define ADDR2          (*(volatile __near unsigned short *)0x6B4)
#define ADDR26         (*(volatile __near unsigned short *)0x6B4)
#define ADSSTR4        (*(volatile __near unsigned char  *)0x6B4)
#define ADSSTR5        (*(volatile __near unsigned char  *)0x6B5)
#define ADANSA1        (*(volatile __near unsigned short *)0x6B6)
#define ADANSB1        (*(volatile __near unsigned short *)0x6B6)
#define ADDR11         (*(volatile __near unsigned short *)0x6B6)
#define ADDR27         (*(volatile __near unsigned short *)0x6B6)
#define ADDR3          (*(volatile __near unsigned short *)0x6B6)
#define ADSHCR         (*(volatile __near unsigned short *)0x6B6)
#define ADSSTR6        (*(volatile __near unsigned char  *)0x6B6)
#define ADSSTR7        (*(volatile __near unsigned char  *)0x6B7)
#define ADADS0         (*(volatile __near unsigned short *)0x6B8)
#define ADDR12         (*(volatile __near unsigned short *)0x6B8)
#define ADDR28         (*(volatile __near unsigned short *)0x6B8)
#define ADDR4          (*(volatile __near unsigned short *)0x6B8)
#define ADSSTR8        (*(volatile __near unsigned char  *)0x6B8)
#define ADSSTR9        (*(volatile __near unsigned char  *)0x6B9)
#define ADADS1         (*(volatile __near unsigned short *)0x6BA)
#define ADDR13         (*(volatile __near unsigned short *)0x6BA)
#define ADDR29         (*(volatile __near unsigned short *)0x6BA)
#define ADDR5          (*(volatile __near unsigned short *)0x6BA)
#define ADDISCR        (*(volatile __near unsigned char  *)0x6BA)
#define ADSSTR10       (*(volatile __near unsigned char  *)0x6BA)
#define ADHVREFCNT     (*(volatile __near unsigned char  *)0x6BA)
#define ADHVREFCNT_bit (*(volatile __near __bitf_T *)0x6BA)
#define ADSSTR11       (*(volatile __near unsigned char  *)0x6BB)
#define ADSLP          (((volatile __near __bitf_T *)0x6BA)->no7)
#define ADDR14         (*(volatile __near unsigned short *)0x6BC)
#define ADDR30         (*(volatile __near unsigned short *)0x6BC)
#define ADDR6          (*(volatile __near unsigned short *)0x6BC)
#define ADOCDR         (*(volatile __near unsigned short *)0x6BC)
#define ADSSTR12       (*(volatile __near unsigned char  *)0x6BC)
#define ADADC          (*(volatile __near unsigned char  *)0x6BC)
#define ADADC_bit      (*(volatile __near __bitf_T *)0x6BC)
#define ADSSTR13       (*(volatile __near unsigned char  *)0x6BD)
#define ADSSTRL        (*(volatile __near unsigned char  *)0x6BD)
#define AVEE           (((volatile __near __bitf_T *)0x6BC)->no7)
#define ADCER          (*(volatile __near unsigned short *)0x6BE)
#define ADDR15         (*(volatile __near unsigned short *)0x6BE)
#define ADDR7          (*(volatile __near unsigned short *)0x6BE)
#define ADRD           (*(volatile __near unsigned short *)0x6BE)
#define ADSSTR14       (*(volatile __near unsigned char  *)0x6BE)
#define ADSSTR15       (*(volatile __near unsigned char  *)0x6BF)
#define ADSSTRO        (*(volatile __near unsigned char  *)0x6BF)
#define LWBR0          (*(volatile __near unsigned char  *)0x6C1)
#define LBRP0          (*(volatile __near unsigned short *)0x6C2)
#define LBRP00         (*(volatile __near unsigned char  *)0x6C2)
#define LBRP01         (*(volatile __near unsigned char  *)0x6C3)
#define LSTC0          (*(volatile __near unsigned char  *)0x6C4)
#define LUSC0          (*(volatile __near unsigned char  *)0x6C5)
#define LMD0           (*(volatile __near unsigned char  *)0x6C8)
#define LBFC0          (*(volatile __near unsigned char  *)0x6C9)
#define LSC0           (*(volatile __near unsigned char  *)0x6CA)
#define LWUP0          (*(volatile __near unsigned char  *)0x6CB)
#define LIE0           (*(volatile __near unsigned char  *)0x6CC)
#define LEDE0          (*(volatile __near unsigned char  *)0x6CD)
#define LCUC0          (*(volatile __near unsigned char  *)0x6CE)
#define LTRC0          (*(volatile __near unsigned char  *)0x6D0)
#define LMST0          (*(volatile __near unsigned char  *)0x6D1)
#define LST0           (*(volatile __near unsigned char  *)0x6D2)
#define LEST0          (*(volatile __near unsigned char  *)0x6D3)
#define LDFC0          (*(volatile __near unsigned char  *)0x6D4)
#define LIDB0          (*(volatile __near unsigned char  *)0x6D5)
#define LCBR0          (*(volatile __near unsigned char  *)0x6D6)
#define LUDB00         (*(volatile __near unsigned char  *)0x6D7)
#define LDB01          (*(volatile __near unsigned char  *)0x6D8)
#define LDB02          (*(volatile __near unsigned char  *)0x6D9)
#define LDB03          (*(volatile __near unsigned char  *)0x6DA)
#define LDB04          (*(volatile __near unsigned char  *)0x6DB)
#define LDB05          (*(volatile __near unsigned char  *)0x6DC)
#define LDB06          (*(volatile __near unsigned char  *)0x6DD)
#define LDB07          (*(volatile __near unsigned char  *)0x6DE)
#define LDB08          (*(volatile __near unsigned char  *)0x6DF)
#define LUOER0         (*(volatile __near unsigned char  *)0x6E0)
#define LUOR01         (*(volatile __near unsigned char  *)0x6E1)
#define LUTDR0         (*(volatile __near unsigned short *)0x6E4)
#define LUTDR0L        (*(volatile __near unsigned char  *)0x6E4)
#define LUTDR0H        (*(volatile __near unsigned char  *)0x6E5)
#define LURDR0         (*(volatile __near unsigned short *)0x6E6)
#define LURDR0L        (*(volatile __near unsigned char  *)0x6E6)
#define LURDR0H        (*(volatile __near unsigned char  *)0x6E7)
#define LUWTDR0        (*(volatile __near unsigned short *)0x6E8)
#define LUWTDR0L       (*(volatile __near unsigned char  *)0x6E8)
#define LUWTDR0H       (*(volatile __near unsigned char  *)0x6E9)
#define LBSS0          (*(volatile __near unsigned char  *)0x6EC)
#define LRSS0          (*(volatile __near unsigned char  *)0x6EE)
#define TRJ0           (*(volatile __near unsigned short *)0x6F0)
#define P0             (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit         (*(volatile __near __bitf_T *)0xFF00)
#define P1             (*(volatile __near unsigned char  *)0xFF01)
#define P1_bit         (*(volatile __near __bitf_T *)0xFF01)
#define P3             (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit         (*(volatile __near __bitf_T *)0xFF03)
#define P4             (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit         (*(volatile __near __bitf_T *)0xFF04)
#define P5             (*(volatile __near unsigned char  *)0xFF05)
#define P5_bit         (*(volatile __near __bitf_T *)0xFF05)
#define P6             (*(volatile __near unsigned char  *)0xFF06)
#define P6_bit         (*(volatile __near __bitf_T *)0xFF06)
#define P7             (*(volatile __near unsigned char  *)0xFF07)
#define P7_bit         (*(volatile __near __bitf_T *)0xFF07)
#define P8             (*(volatile __near unsigned char  *)0xFF08)
#define P8_bit         (*(volatile __near __bitf_T *)0xFF08)
#define P9             (*(volatile __near unsigned char  *)0xFF09)
#define P9_bit         (*(volatile __near __bitf_T *)0xFF09)
#define P12            (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit        (*(volatile __near __bitf_T *)0xFF0C)
#define P13            (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit        (*(volatile __near __bitf_T *)0xFF0D)
#define P14            (*(volatile __near unsigned char  *)0xFF0E)
#define P14_bit        (*(volatile __near __bitf_T *)0xFF0E)
#define SDR00          (*(volatile __near unsigned short *)0xFF10)
#define SDR00L         (*(volatile __near unsigned char  *)0xFF10)
#define SDR01          (*(volatile __near unsigned short *)0xFF12)
#define SDR01L         (*(volatile __near unsigned char  *)0xFF12)
#define TDR00          (*(volatile __near unsigned short *)0xFF18)
#define TDR01          (*(volatile __near unsigned short *)0xFF1A)
#define TDR01L         (*(volatile __near unsigned char  *)0xFF1A)
#define TDR01H         (*(volatile __near unsigned char  *)0xFF1B)
#define PM0            (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit        (*(volatile __near __bitf_T *)0xFF20)
#define PM1            (*(volatile __near unsigned char  *)0xFF21)
#define PM1_bit        (*(volatile __near __bitf_T *)0xFF21)
#define PM3            (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit        (*(volatile __near __bitf_T *)0xFF23)
#define PM4            (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit        (*(volatile __near __bitf_T *)0xFF24)
#define PM5            (*(volatile __near unsigned char  *)0xFF25)
#define PM5_bit        (*(volatile __near __bitf_T *)0xFF25)
#define PM6            (*(volatile __near unsigned char  *)0xFF26)
#define PM6_bit        (*(volatile __near __bitf_T *)0xFF26)
#define PM7            (*(volatile __near unsigned char  *)0xFF27)
#define PM7_bit        (*(volatile __near __bitf_T *)0xFF27)
#define PM8            (*(volatile __near unsigned char  *)0xFF28)
#define PM8_bit        (*(volatile __near __bitf_T *)0xFF28)
#define PM9            (*(volatile __near unsigned char  *)0xFF29)
#define PM9_bit        (*(volatile __near __bitf_T *)0xFF29)
#define PM12           (*(volatile __near unsigned char  *)0xFF2C)
#define PM12_bit       (*(volatile __near __bitf_T *)0xFF2C)
#define PM14           (*(volatile __near unsigned char  *)0xFF2E)
#define PM14_bit       (*(volatile __near __bitf_T *)0xFF2E)
#define ADWINR         (*(volatile __near unsigned char  *)0xFF30)
#define AAUWINR        (*(volatile __near unsigned char  *)0xFF32)
#define KRM            (*(volatile __near unsigned char  *)0xFF37)
#define KRM_bit        (*(volatile __near __bitf_T *)0xFF37)
#define EGP0           (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit       (*(volatile __near __bitf_T *)0xFF38)
#define EGN0           (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit       (*(volatile __near __bitf_T *)0xFF39)
#define EGP1           (*(volatile __near unsigned char  *)0xFF3A)
#define EGP1_bit       (*(volatile __near __bitf_T *)0xFF3A)
#define EGN1           (*(volatile __near unsigned char  *)0xFF3B)
#define EGN1_bit       (*(volatile __near __bitf_T *)0xFF3B)
#define SDR10          (*(volatile __near unsigned short *)0xFF48)
#define SDR10L         (*(volatile __near unsigned char  *)0xFF48)
#define SDR11          (*(volatile __near unsigned short *)0xFF4A)
#define SDR11L         (*(volatile __near unsigned char  *)0xFF4A)
#define IICA0          (*(volatile __near unsigned char  *)0xFF50)
#define IICS0          (*(volatile __near unsigned char  *)0xFF51)
#define IICS0_bit      (*(volatile __near __bitf_T *)0xFF51)
#define SPD0           (((volatile __near __bitf_T *)0xFF51)->no0)
#define STD0           (((volatile __near __bitf_T *)0xFF51)->no1)
#define ACKD0          (((volatile __near __bitf_T *)0xFF51)->no2)
#define TRC0           (((volatile __near __bitf_T *)0xFF51)->no3)
#define COI0           (((volatile __near __bitf_T *)0xFF51)->no4)
#define EXC0           (((volatile __near __bitf_T *)0xFF51)->no5)
#define ALD0           (((volatile __near __bitf_T *)0xFF51)->no6)
#define MSTS0          (((volatile __near __bitf_T *)0xFF51)->no7)
#define IICF0          (*(volatile __near unsigned char  *)0xFF52)
#define IICF0_bit      (*(volatile __near __bitf_T *)0xFF52)
#define IICRSV0        (((volatile __near __bitf_T *)0xFF52)->no0)
#define STCEN0         (((volatile __near __bitf_T *)0xFF52)->no1)
#define IICBSY0        (((volatile __near __bitf_T *)0xFF52)->no6)
#define STCF0          (((volatile __near __bitf_T *)0xFF52)->no7)
#define SUBCUDW        (*(volatile __near unsigned short *)0xFF54)
#define TRDGRC0        (*(volatile __near unsigned short *)0xFF58)
#define TRDGRD0        (*(volatile __near unsigned short *)0xFF5A)
#define TRDGRC1        (*(volatile __near unsigned short *)0xFF5C)
#define TRDGRD1        (*(volatile __near unsigned short *)0xFF5E)
#define TRDCMPD0       (*(volatile __near unsigned short *)0xFF60)
#define TRDCMPC1       (*(volatile __near unsigned short *)0xFF62)
#define TRDCMPD1       (*(volatile __near unsigned short *)0xFF64)
#define TRDADTB0       (*(volatile __near unsigned short *)0xFF66)
#define TRDADTB1       (*(volatile __near unsigned short *)0xFF68)
#define TRDRDT01       (*(volatile __near unsigned short *)0xFF6A)
#define TRDRDT0        (*(volatile __near unsigned char  *)0xFF6A)
#define TRDRDT0_bit    (*(volatile __near __bitf_T *)0xFF6A)
#define TRDRDT1        (*(volatile __near unsigned char  *)0xFF6B)
#define TRDRDT1_bit    (*(volatile __near __bitf_T *)0xFF6B)
#define TRDDGCR0       (*(volatile __near unsigned short *)0xFF6C)
#define TRDDNR0        (*(volatile __near unsigned char  *)0xFF6C)
#define TRDDNR0_bit    (*(volatile __near __bitf_T *)0xFF6C)
#define TRDGPR0        (*(volatile __near unsigned char  *)0xFF6D)
#define TRDGPR0_bit    (*(volatile __near __bitf_T *)0xFF6D)
#define TRDDGCR1       (*(volatile __near unsigned short *)0xFF6E)
#define TRDDNR1        (*(volatile __near unsigned char  *)0xFF6E)
#define TRDDNR1_bit    (*(volatile __near __bitf_T *)0xFF6E)
#define TRDGPR1        (*(volatile __near unsigned char  *)0xFF6F)
#define TRDGPR1_bit    (*(volatile __near __bitf_T *)0xFF6F)
#define TDR02          (*(volatile __near unsigned short *)0xFF74)
#define TDR03          (*(volatile __near unsigned short *)0xFF76)
#define TDR03L         (*(volatile __near unsigned char  *)0xFF76)
#define TDR03H         (*(volatile __near unsigned char  *)0xFF77)
#define TDR04          (*(volatile __near unsigned short *)0xFF78)
#define TDR05          (*(volatile __near unsigned short *)0xFF7A)
#define TDR06          (*(volatile __near unsigned short *)0xFF7C)
#define TDR07          (*(volatile __near unsigned short *)0xFF7E)
#define TDR10          (*(volatile __near unsigned short *)0xFF80)
#define TDR11          (*(volatile __near unsigned short *)0xFF82)
#define TDR11L         (*(volatile __near unsigned char  *)0xFF82)
#define TDR11H         (*(volatile __near unsigned char  *)0xFF83)
#define TDR12          (*(volatile __near unsigned short *)0xFF84)
#define TDR13          (*(volatile __near unsigned short *)0xFF86)
#define TDR13L         (*(volatile __near unsigned char  *)0xFF86)
#define TDR13H         (*(volatile __near unsigned char  *)0xFF87)
#define SEC            (*(volatile __near unsigned char  *)0xFF92)
#define MIN            (*(volatile __near unsigned char  *)0xFF93)
#define HOUR           (*(volatile __near unsigned char  *)0xFF94)
#define WEEK           (*(volatile __near unsigned char  *)0xFF95)
#define DAY            (*(volatile __near unsigned char  *)0xFF96)
#define MONTH          (*(volatile __near unsigned char  *)0xFF97)
#define YEAR           (*(volatile __near unsigned char  *)0xFF98)
#define SUBCUD         (*(volatile __near unsigned char  *)0xFF99)
#define ALARMWM        (*(volatile __near unsigned char  *)0xFF9A)
#define ALARMWH        (*(volatile __near unsigned char  *)0xFF9B)
#define ALARMWW        (*(volatile __near unsigned char  *)0xFF9C)
#define RTCC0          (*(volatile __near unsigned char  *)0xFF9D)
#define RTCC0_bit      (*(volatile __near __bitf_T *)0xFF9D)
#define RCLOE1         (((volatile __near __bitf_T *)0xFF9D)->no5)
#define RTCE           (((volatile __near __bitf_T *)0xFF9D)->no7)
#define RTCC1          (*(volatile __near unsigned char  *)0xFF9E)
#define RTCC1_bit      (*(volatile __near __bitf_T *)0xFF9E)
#define RWAIT          (((volatile __near __bitf_T *)0xFF9E)->no0)
#define RWST           (((volatile __near __bitf_T *)0xFF9E)->no1)
#define RIFG           (((volatile __near __bitf_T *)0xFF9E)->no3)
#define WAFG           (((volatile __near __bitf_T *)0xFF9E)->no4)
#define WALIE          (((volatile __near __bitf_T *)0xFF9E)->no6)
#define WALE           (((volatile __near __bitf_T *)0xFF9E)->no7)
#define CMC            (*(volatile __near unsigned char  *)0xFFA0)
#define CSC            (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit        (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP        (((volatile __near __bitf_T *)0xFFA1)->no0)
#define XTSTOP         (((volatile __near __bitf_T *)0xFFA1)->no6)
#define MSTOP          (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC           (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit       (*(volatile __near __bitf_T *)0xFFA2)
#define OSTS           (*(volatile __near unsigned char  *)0xFFA3)
#define CKC            (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit        (*(volatile __near __bitf_T *)0xFFA4)
#define MCM0           (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS            (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS            (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS            (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0           (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit       (*(volatile __near __bitf_T *)0xFFA5)
#define PCLOE0         (((volatile __near __bitf_T *)0xFFA5)->no7)
#define RESF           (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM           (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit       (*(volatile __near __bitf_T *)0xFFA9)
#define LVIF           (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVIOMSK        (((volatile __near __bitf_T *)0xFFA9)->no1)
#define LVISEN         (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS           (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit       (*(volatile __near __bitf_T *)0xFFAA)
#define LVILV          (((volatile __near __bitf_T *)0xFFAA)->no0)
#define LVIMD          (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE           (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN          (*(volatile __near unsigned char  *)0xFFAC)
#define FLSEC          (*(volatile __near unsigned short *)0xFFB0)
#define FLFSWS         (*(volatile __near unsigned short *)0xFFB2)
#define FLFSWE         (*(volatile __near unsigned short *)0xFFB4)
#define FSSET          (*(volatile __near unsigned char  *)0xFFB6)
#define FSSE           (*(volatile __near unsigned char  *)0xFFB7)
#define FSSE_bit       (*(volatile __near __bitf_T *)0xFFB7)
#define ESQST          (((volatile __near __bitf_T *)0xFFB7)->no7)
#define PFCMD          (*(volatile __near unsigned char  *)0xFFC0)
#define PFS            (*(volatile __near unsigned char  *)0xFFC1)
#define PFS_bit        (*(volatile __near __bitf_T *)0xFFC1)
#define FLWE           (*(volatile __near unsigned char  *)0xFFC6)
#define IF2            (*(volatile __near unsigned short *)0xFFD0)
#define IF2L           (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit       (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H           (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit       (*(volatile __near __bitf_T *)0xFFD1)
#define TMIF05         (((volatile __near __bitf_T *)0xFFD0)->no0)
#define TMIF06         (((volatile __near __bitf_T *)0xFFD0)->no1)
#define TMIF07         (((volatile __near __bitf_T *)0xFFD0)->no2)
#define LIN0WUPIF      (((volatile __near __bitf_T *)0xFFD0)->no3)
#define PIF11          (((volatile __near __bitf_T *)0xFFD0)->no3)
#define KRIF           (((volatile __near __bitf_T *)0xFFD0)->no4)
#define TMIF10         (((volatile __near __bitf_T *)0xFFD1)->no3)
#define TMIF11         (((volatile __near __bitf_T *)0xFFD1)->no4)
#define TMIF12         (((volatile __near __bitf_T *)0xFFD1)->no5)
#define TMIF13         (((volatile __near __bitf_T *)0xFFD1)->no6)
#define IF3            (*(volatile __near unsigned short *)0xFFD2)
#define IF3L           (*(volatile __near unsigned char  *)0xFFD2)
#define IF3L_bit       (*(volatile __near __bitf_T *)0xFFD2)
#define IF3H           (*(volatile __near unsigned char  *)0xFFD3)
#define IF3H_bit       (*(volatile __near __bitf_T *)0xFFD3)
#define PIF12          (((volatile __near __bitf_T *)0xFFD2)->no0)
#define ADGBIF         (((volatile __near __bitf_T *)0xFFD3)->no2)
#define ROMIF          (((volatile __near __bitf_T *)0xFFD3)->no4)
#define MK2            (*(volatile __near unsigned short *)0xFFD4)
#define MK2L           (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit       (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H           (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit       (*(volatile __near __bitf_T *)0xFFD5)
#define TMMK05         (((volatile __near __bitf_T *)0xFFD4)->no0)
#define TMMK06         (((volatile __near __bitf_T *)0xFFD4)->no1)
#define TMMK07         (((volatile __near __bitf_T *)0xFFD4)->no2)
#define LIN0WUPMK      (((volatile __near __bitf_T *)0xFFD4)->no3)
#define PMK11          (((volatile __near __bitf_T *)0xFFD4)->no3)
#define KRMK           (((volatile __near __bitf_T *)0xFFD4)->no4)
#define TMMK10         (((volatile __near __bitf_T *)0xFFD5)->no3)
#define TMMK11         (((volatile __near __bitf_T *)0xFFD5)->no4)
#define TMMK12         (((volatile __near __bitf_T *)0xFFD5)->no5)
#define TMMK13         (((volatile __near __bitf_T *)0xFFD5)->no6)
#define MK3            (*(volatile __near unsigned short *)0xFFD6)
#define MK3L           (*(volatile __near unsigned char  *)0xFFD6)
#define MK3L_bit       (*(volatile __near __bitf_T *)0xFFD6)
#define MK3H           (*(volatile __near unsigned char  *)0xFFD7)
#define MK3H_bit       (*(volatile __near __bitf_T *)0xFFD7)
#define PMK12          (((volatile __near __bitf_T *)0xFFD6)->no0)
#define ADGBMK         (((volatile __near __bitf_T *)0xFFD7)->no2)
#define ROMMK          (((volatile __near __bitf_T *)0xFFD7)->no4)
#define PR02           (*(volatile __near unsigned short *)0xFFD8)
#define PR02L          (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit      (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H          (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit      (*(volatile __near __bitf_T *)0xFFD9)
#define TMPR005        (((volatile __near __bitf_T *)0xFFD8)->no0)
#define TMPR006        (((volatile __near __bitf_T *)0xFFD8)->no1)
#define TMPR007        (((volatile __near __bitf_T *)0xFFD8)->no2)
#define LIN0WUPPR0     (((volatile __near __bitf_T *)0xFFD8)->no3)
#define PPR011         (((volatile __near __bitf_T *)0xFFD8)->no3)
#define KRPR0          (((volatile __near __bitf_T *)0xFFD8)->no4)
#define TMPR010        (((volatile __near __bitf_T *)0xFFD9)->no3)
#define TMPR011        (((volatile __near __bitf_T *)0xFFD9)->no4)
#define TMPR012        (((volatile __near __bitf_T *)0xFFD9)->no5)
#define TMPR013        (((volatile __near __bitf_T *)0xFFD9)->no6)
#define PR03           (*(volatile __near unsigned short *)0xFFDA)
#define PR03L          (*(volatile __near unsigned char  *)0xFFDA)
#define PR03L_bit      (*(volatile __near __bitf_T *)0xFFDA)
#define PR03H          (*(volatile __near unsigned char  *)0xFFDB)
#define PR03H_bit      (*(volatile __near __bitf_T *)0xFFDB)
#define PPR012         (((volatile __near __bitf_T *)0xFFDA)->no0)
#define ADGBPR0        (((volatile __near __bitf_T *)0xFFDB)->no2)
#define ROMPR0         (((volatile __near __bitf_T *)0xFFDB)->no4)
#define PR12           (*(volatile __near unsigned short *)0xFFDC)
#define PR12L          (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit      (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H          (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit      (*(volatile __near __bitf_T *)0xFFDD)
#define TMPR105        (((volatile __near __bitf_T *)0xFFDC)->no0)
#define TMPR106        (((volatile __near __bitf_T *)0xFFDC)->no1)
#define TMPR107        (((volatile __near __bitf_T *)0xFFDC)->no2)
#define LIN0WUPPR1     (((volatile __near __bitf_T *)0xFFDC)->no3)
#define PPR111         (((volatile __near __bitf_T *)0xFFDC)->no3)
#define KRPR1          (((volatile __near __bitf_T *)0xFFDC)->no4)
#define TMPR110        (((volatile __near __bitf_T *)0xFFDD)->no3)
#define TMPR111        (((volatile __near __bitf_T *)0xFFDD)->no4)
#define TMPR112        (((volatile __near __bitf_T *)0xFFDD)->no5)
#define TMPR113        (((volatile __near __bitf_T *)0xFFDD)->no6)
#define PR13           (*(volatile __near unsigned short *)0xFFDE)
#define PR13L          (*(volatile __near unsigned char  *)0xFFDE)
#define PR13L_bit      (*(volatile __near __bitf_T *)0xFFDE)
#define PR13H          (*(volatile __near unsigned char  *)0xFFDF)
#define PR13H_bit      (*(volatile __near __bitf_T *)0xFFDF)
#define PPR112         (((volatile __near __bitf_T *)0xFFDE)->no0)
#define ADGBPR1        (((volatile __near __bitf_T *)0xFFDF)->no2)
#define ROMPR1         (((volatile __near __bitf_T *)0xFFDF)->no4)
#define IF0            (*(volatile __near unsigned short *)0xFFE0)
#define IF0L           (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit       (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H           (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit       (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF         (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF          (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0           (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1           (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2           (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3           (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4           (((volatile __near __bitf_T *)0xFFE0)->no6)
#define SPMIF          (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5           (((volatile __near __bitf_T *)0xFFE0)->no7)
#define CLMIF          (((volatile __near __bitf_T *)0xFFE1)->no0)
#define CSIIF00        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define IICIF00        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define STIF0          (((volatile __near __bitf_T *)0xFFE1)->no1)
#define CSIIF01        (((volatile __near __bitf_T *)0xFFE1)->no2)
#define IICIF01        (((volatile __near __bitf_T *)0xFFE1)->no2)
#define SRIF0          (((volatile __near __bitf_T *)0xFFE1)->no2)
#define TRDIF0         (((volatile __near __bitf_T *)0xFFE1)->no3)
#define TRDIF1         (((volatile __near __bitf_T *)0xFFE1)->no4)
#define TRJIF0         (((volatile __near __bitf_T *)0xFFE1)->no5)
#define RAMIF          (((volatile __near __bitf_T *)0xFFE1)->no6)
#define LIN0TRMIF      (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1            (*(volatile __near unsigned short *)0xFFE2)
#define IF1L           (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit       (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H           (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit       (*(volatile __near __bitf_T *)0xFFE3)
#define LIN0RVCIF      (((volatile __near __bitf_T *)0xFFE2)->no0)
#define LIN0IF         (((volatile __near __bitf_T *)0xFFE2)->no1)
#define LIN0STAIF      (((volatile __near __bitf_T *)0xFFE2)->no1)
#define IICAIF0        (((volatile __near __bitf_T *)0xFFE2)->no2)
#define PIF8           (((volatile __near __bitf_T *)0xFFE2)->no3)
#define RTCIF          (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF00         (((volatile __near __bitf_T *)0xFFE2)->no4)
#define TMIF01         (((volatile __near __bitf_T *)0xFFE2)->no5)
#define TMIF02         (((volatile __near __bitf_T *)0xFFE2)->no6)
#define TMIF03         (((volatile __near __bitf_T *)0xFFE2)->no7)
#define ADIF           (((volatile __near __bitf_T *)0xFFE3)->no0)
#define PIF6           (((volatile __near __bitf_T *)0xFFE3)->no1)
#define TMIF11H        (((volatile __near __bitf_T *)0xFFE3)->no1)
#define PIF7           (((volatile __near __bitf_T *)0xFFE3)->no2)
#define TMIF13H        (((volatile __near __bitf_T *)0xFFE3)->no2)
#define PIF9           (((volatile __near __bitf_T *)0xFFE3)->no3)
#define TMIF01H        (((volatile __near __bitf_T *)0xFFE3)->no3)
#define PIF10          (((volatile __near __bitf_T *)0xFFE3)->no4)
#define TMIF03H        (((volatile __near __bitf_T *)0xFFE3)->no4)
#define CSIIF10        (((volatile __near __bitf_T *)0xFFE3)->no5)
#define IICIF10        (((volatile __near __bitf_T *)0xFFE3)->no5)
#define STIF1          (((volatile __near __bitf_T *)0xFFE3)->no5)
#define CSIIF11        (((volatile __near __bitf_T *)0xFFE3)->no6)
#define IICIF11        (((volatile __near __bitf_T *)0xFFE3)->no6)
#define SRIF1          (((volatile __near __bitf_T *)0xFFE3)->no6)
#define TMIF04         (((volatile __near __bitf_T *)0xFFE3)->no7)
#define MK0            (*(volatile __near unsigned short *)0xFFE4)
#define MK0L           (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit       (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H           (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit       (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK         (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK          (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0           (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1           (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2           (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3           (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4           (((volatile __near __bitf_T *)0xFFE4)->no6)
#define SPMMK          (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5           (((volatile __near __bitf_T *)0xFFE4)->no7)
#define CLMMK          (((volatile __near __bitf_T *)0xFFE5)->no0)
#define CSIMK00        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define IICMK00        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define STMK0          (((volatile __near __bitf_T *)0xFFE5)->no1)
#define CSIMK01        (((volatile __near __bitf_T *)0xFFE5)->no2)
#define IICMK01        (((volatile __near __bitf_T *)0xFFE5)->no2)
#define SRMK0          (((volatile __near __bitf_T *)0xFFE5)->no2)
#define TRDMK0         (((volatile __near __bitf_T *)0xFFE5)->no3)
#define TRDMK1         (((volatile __near __bitf_T *)0xFFE5)->no4)
#define TRJMK0         (((volatile __near __bitf_T *)0xFFE5)->no5)
#define RAMMK          (((volatile __near __bitf_T *)0xFFE5)->no6)
#define LIN0TRMMK      (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1            (*(volatile __near unsigned short *)0xFFE6)
#define MK1L           (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit       (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H           (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit       (*(volatile __near __bitf_T *)0xFFE7)
#define LIN0RVCMK      (((volatile __near __bitf_T *)0xFFE6)->no0)
#define LIN0MK         (((volatile __near __bitf_T *)0xFFE6)->no1)
#define LIN0STAMK      (((volatile __near __bitf_T *)0xFFE6)->no1)
#define IICAMK0        (((volatile __near __bitf_T *)0xFFE6)->no2)
#define PMK8           (((volatile __near __bitf_T *)0xFFE6)->no3)
#define RTCMK          (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK00         (((volatile __near __bitf_T *)0xFFE6)->no4)
#define TMMK01         (((volatile __near __bitf_T *)0xFFE6)->no5)
#define TMMK02         (((volatile __near __bitf_T *)0xFFE6)->no6)
#define TMMK03         (((volatile __near __bitf_T *)0xFFE6)->no7)
#define ADMK           (((volatile __near __bitf_T *)0xFFE7)->no0)
#define PMK6           (((volatile __near __bitf_T *)0xFFE7)->no1)
#define TMMK11H        (((volatile __near __bitf_T *)0xFFE7)->no1)
#define PMK7           (((volatile __near __bitf_T *)0xFFE7)->no2)
#define TMMK13H        (((volatile __near __bitf_T *)0xFFE7)->no2)
#define PMK9           (((volatile __near __bitf_T *)0xFFE7)->no3)
#define TMMK01H        (((volatile __near __bitf_T *)0xFFE7)->no3)
#define PMK10          (((volatile __near __bitf_T *)0xFFE7)->no4)
#define TMMK03H        (((volatile __near __bitf_T *)0xFFE7)->no4)
#define CSIMK10        (((volatile __near __bitf_T *)0xFFE7)->no5)
#define IICMK10        (((volatile __near __bitf_T *)0xFFE7)->no5)
#define STMK1          (((volatile __near __bitf_T *)0xFFE7)->no5)
#define CSIMK11        (((volatile __near __bitf_T *)0xFFE7)->no6)
#define IICMK11        (((volatile __near __bitf_T *)0xFFE7)->no6)
#define SRMK1          (((volatile __near __bitf_T *)0xFFE7)->no6)
#define TMMK04         (((volatile __near __bitf_T *)0xFFE7)->no7)
#define PR00           (*(volatile __near unsigned short *)0xFFE8)
#define PR00L          (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit      (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H          (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit      (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0        (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0         (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00          (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01          (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02          (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03          (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04          (((volatile __near __bitf_T *)0xFFE8)->no6)
#define SPMPR0         (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05          (((volatile __near __bitf_T *)0xFFE8)->no7)
#define CLMPR0         (((volatile __near __bitf_T *)0xFFE9)->no0)
#define CSIPR000       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define IICPR000       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define STPR00         (((volatile __near __bitf_T *)0xFFE9)->no1)
#define CSIPR001       (((volatile __near __bitf_T *)0xFFE9)->no2)
#define IICPR001       (((volatile __near __bitf_T *)0xFFE9)->no2)
#define SRPR00         (((volatile __near __bitf_T *)0xFFE9)->no2)
#define TRDPR00        (((volatile __near __bitf_T *)0xFFE9)->no3)
#define TRDPR01        (((volatile __near __bitf_T *)0xFFE9)->no4)
#define TRJPR00        (((volatile __near __bitf_T *)0xFFE9)->no5)
#define RAMPR0         (((volatile __near __bitf_T *)0xFFE9)->no6)
#define LIN0TRMPR0     (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01           (*(volatile __near unsigned short *)0xFFEA)
#define PR01L          (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit      (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H          (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit      (*(volatile __near __bitf_T *)0xFFEB)
#define LIN0RVCPR0     (((volatile __near __bitf_T *)0xFFEA)->no0)
#define LIN0PR0        (((volatile __near __bitf_T *)0xFFEA)->no1)
#define LIN0STAPR0     (((volatile __near __bitf_T *)0xFFEA)->no1)
#define IICAPR00       (((volatile __near __bitf_T *)0xFFEA)->no2)
#define PPR08          (((volatile __near __bitf_T *)0xFFEA)->no3)
#define RTCPR0         (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR000        (((volatile __near __bitf_T *)0xFFEA)->no4)
#define TMPR001        (((volatile __near __bitf_T *)0xFFEA)->no5)
#define TMPR002        (((volatile __near __bitf_T *)0xFFEA)->no6)
#define TMPR003        (((volatile __near __bitf_T *)0xFFEA)->no7)
#define ADPR0          (((volatile __near __bitf_T *)0xFFEB)->no0)
#define PPR06          (((volatile __near __bitf_T *)0xFFEB)->no1)
#define TMPR011H       (((volatile __near __bitf_T *)0xFFEB)->no1)
#define PPR07          (((volatile __near __bitf_T *)0xFFEB)->no2)
#define TMPR013H       (((volatile __near __bitf_T *)0xFFEB)->no2)
#define PPR09          (((volatile __near __bitf_T *)0xFFEB)->no3)
#define TMPR001H       (((volatile __near __bitf_T *)0xFFEB)->no3)
#define PPR010         (((volatile __near __bitf_T *)0xFFEB)->no4)
#define TMPR003H       (((volatile __near __bitf_T *)0xFFEB)->no4)
#define CSIPR010       (((volatile __near __bitf_T *)0xFFEB)->no5)
#define IICPR010       (((volatile __near __bitf_T *)0xFFEB)->no5)
#define STPR01         (((volatile __near __bitf_T *)0xFFEB)->no5)
#define CSIPR011       (((volatile __near __bitf_T *)0xFFEB)->no6)
#define IICPR011       (((volatile __near __bitf_T *)0xFFEB)->no6)
#define SRPR01         (((volatile __near __bitf_T *)0xFFEB)->no6)
#define TMPR004        (((volatile __near __bitf_T *)0xFFEB)->no7)
#define PR10           (*(volatile __near unsigned short *)0xFFEC)
#define PR10L          (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit      (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H          (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit      (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1        (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1         (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10          (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11          (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12          (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13          (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14          (((volatile __near __bitf_T *)0xFFEC)->no6)
#define SPMPR1         (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15          (((volatile __near __bitf_T *)0xFFEC)->no7)
#define CLMPR1         (((volatile __near __bitf_T *)0xFFED)->no0)
#define CSIPR100       (((volatile __near __bitf_T *)0xFFED)->no1)
#define IICPR100       (((volatile __near __bitf_T *)0xFFED)->no1)
#define STPR10         (((volatile __near __bitf_T *)0xFFED)->no1)
#define CSIPR101       (((volatile __near __bitf_T *)0xFFED)->no2)
#define IICPR101       (((volatile __near __bitf_T *)0xFFED)->no2)
#define SRPR10         (((volatile __near __bitf_T *)0xFFED)->no2)
#define TRDPR10        (((volatile __near __bitf_T *)0xFFED)->no3)
#define TRDPR11        (((volatile __near __bitf_T *)0xFFED)->no4)
#define TRJPR10        (((volatile __near __bitf_T *)0xFFED)->no5)
#define RAMPR1         (((volatile __near __bitf_T *)0xFFED)->no6)
#define LIN0TRMPR1     (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11           (*(volatile __near unsigned short *)0xFFEE)
#define PR11L          (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit      (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H          (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit      (*(volatile __near __bitf_T *)0xFFEF)
#define LIN0RVCPR1     (((volatile __near __bitf_T *)0xFFEE)->no0)
#define LIN0PR1        (((volatile __near __bitf_T *)0xFFEE)->no1)
#define LIN0STAPR1     (((volatile __near __bitf_T *)0xFFEE)->no1)
#define IICAPR10       (((volatile __near __bitf_T *)0xFFEE)->no2)
#define PPR18          (((volatile __near __bitf_T *)0xFFEE)->no3)
#define RTCPR1         (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR100        (((volatile __near __bitf_T *)0xFFEE)->no4)
#define TMPR101        (((volatile __near __bitf_T *)0xFFEE)->no5)
#define TMPR102        (((volatile __near __bitf_T *)0xFFEE)->no6)
#define TMPR103        (((volatile __near __bitf_T *)0xFFEE)->no7)
#define ADPR1          (((volatile __near __bitf_T *)0xFFEF)->no0)
#define PPR16          (((volatile __near __bitf_T *)0xFFEF)->no1)
#define TMPR111H       (((volatile __near __bitf_T *)0xFFEF)->no1)
#define PPR17          (((volatile __near __bitf_T *)0xFFEF)->no2)
#define TMPR113H       (((volatile __near __bitf_T *)0xFFEF)->no2)
#define PPR19          (((volatile __near __bitf_T *)0xFFEF)->no3)
#define TMPR101H       (((volatile __near __bitf_T *)0xFFEF)->no3)
#define PPR110         (((volatile __near __bitf_T *)0xFFEF)->no4)
#define TMPR103H       (((volatile __near __bitf_T *)0xFFEF)->no4)
#define CSIPR110       (((volatile __near __bitf_T *)0xFFEF)->no5)
#define IICPR110       (((volatile __near __bitf_T *)0xFFEF)->no5)
#define STPR11         (((volatile __near __bitf_T *)0xFFEF)->no5)
#define CSIPR111       (((volatile __near __bitf_T *)0xFFEF)->no6)
#define IICPR111       (((volatile __near __bitf_T *)0xFFEF)->no6)
#define SRPR11         (((volatile __near __bitf_T *)0xFFEF)->no6)
#define TMPR104        (((volatile __near __bitf_T *)0xFFEF)->no7)
#define MACRL          (*(volatile __near unsigned short *)0xFFF0)
#define MACRH          (*(volatile __near unsigned short *)0xFFF2)
#define PMC            (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit        (*(volatile __near __bitf_T *)0xFFFE)
#define MAA            (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTSPM                          0x0010
#define INTP5                           0x0012
#define INTCLM                          0x0014
#define INTCSI00                        0x0016
#define INTIIC00                        0x0016
#define INTST0                          0x0016
#define INTCSI01                        0x0018
#define INTIIC01                        0x0018
#define INTSR0                          0x0018
#define INTTRD0                         0x001A
#define INTTRD1                         0x001C
#define INTTRJ0                         0x001E
#define INTRAM                          0x0020
#define INTLIN0TRM                      0x0022
#define INTLIN0RVC                      0x0024
#define INTLIN0                         0x0026
#define INTLIN0STA                      0x0026
#define INTIICA0                        0x0028
#define INTP8                           0x002A
#define INTRTC                          0x002A
#define INTTM00                         0x002C
#define INTTM01                         0x002E
#define INTTM02                         0x0030
#define INTTM03                         0x0032
#define INTAD                           0x0034
#define INTP6                           0x0036
#define INTTM11H                        0x0036
#define INTP7                           0x0038
#define INTTM13H                        0x0038
#define INTP9                           0x003A
#define INTTM01H                        0x003A
#define INTP10                          0x003C
#define INTTM03H                        0x003C
#define INTCSI10                        0x003E
#define INTIIC10                        0x003E
#define INTST1                          0x003E
#define INTCSI11                        0x0040
#define INTIIC11                        0x0040
#define INTSR1                          0x0040
#define INTTM04                         0x0042
#define INTTM05                         0x0044
#define INTTM06                         0x0046
#define INTTM07                         0x0048
#define INTLIN0WUP                      0x004A
#define INTP11                          0x004A
#define INTKR                           0x004C
#define INTTM10                         0x005A
#define INTTM11                         0x005C
#define INTTM12                         0x005E
#define INTTM13                         0x0060
#define INTFL                           0x0062
#define INTP12                          0x0064
#define INTADGB                         0x0078
#define INTROM                          0x007C

#endif
